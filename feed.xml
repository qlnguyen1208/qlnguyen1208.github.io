<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://qlnguyen1208.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://qlnguyen1208.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-01-03T19:41:08+00:00</updated><id>https://qlnguyen1208.github.io/feed.xml</id><title type="html">blank</title><subtitle>Math - Econ student at University of California, San Diego </subtitle><entry><title type="html">Creating a PCR Primer Table in LaTeX from a .csv File</title><link href="https://qlnguyen1208.github.io/blog/2024/create-latex-primer-table-from-csv/" rel="alternate" type="text/html" title="Creating a PCR Primer Table in LaTeX from a .csv File"/><published>2024-04-03T00:00:00+00:00</published><updated>2024-04-03T00:00:00+00:00</updated><id>https://qlnguyen1208.github.io/blog/2024/create-latex-primer-table-from-csv</id><content type="html" xml:base="https://qlnguyen1208.github.io/blog/2024/create-latex-primer-table-from-csv/"><![CDATA[<p>The following example generates a nice readable LaTeX table of PCR primer sequences from a .csv file using a self defined command and <a href="https://ctan.org/pkg/csvsimple">csvsimple</a>. Using this approach allows for easy storage and management of sequences (or any other data in principle) in the .csv file, without having to include and format any actual sequence data in the .tex files of the LaTeX document.</p> <p><br/></p> <h4 id="1-getting-the-raw-data-ready">1) Getting the raw Data ready</h4> <p>Use a text editor or a spreadsheet editor to create a .csv file containing the gene name, forward and reverse sequence. Below is a example from my bachelor’s thesis.</p> <p>The column names in the header will later be used as references to the columns.</p> <pre><code class="language-csv">gene,seqfwd,seqrev
7sl,CCTGTAGTCCCAGCTACTCG,CTGCTCCGTTTCCGACCTGG
Acta2,CAACCGGGAGAAAATGACC,CAGTTGTACGTCCAGAGGCATA
Akt1,CTGTTCGAGCTGATCCTCATG,CGAAATACCTGGTGTCAGTCTC
</code></pre> <p><br/></p> <h4 id="2-defining-the-custom-formatting-command">2) Defining the custom Formatting Command</h4> <p>Inside the preamble of a latex document define a function <code class="language-plaintext highlighter-rouge">\formatDNA{}</code> like in the example below. When used in the document body, the function takes the provided string and inserts a space after every third character. (e.g. <code class="language-plaintext highlighter-rouge">\formatDNA{CTGTTCGAGCT}</code> -&gt; <code class="language-plaintext highlighter-rouge">CTG TTC GAG CT</code>)</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">\documentclass</span><span class="na">[english,12pt,twoside]</span><span class="p">{</span>article<span class="p">}</span>
.
.
.
<span class="k">\makeatletter</span><span class="c">%</span>
<span class="k">\newcounter</span><span class="p">{</span>@count<span class="p">}</span><span class="c">%</span>
<span class="k">\newcommand</span><span class="p">{</span><span class="k">\formatDNA</span><span class="p">}</span>[1]<span class="p">{</span><span class="c">%</span>
	<span class="k">\setcounter</span><span class="p">{</span>@count<span class="p">}{</span>0<span class="p">}</span><span class="c">%</span>
	<span class="k">\@</span>tfor<span class="k">\base</span>:=#1<span class="k">\do</span><span class="p">{</span><span class="c">%</span>
		<span class="k">\base</span><span class="c">%</span>
		<span class="k">\stepcounter</span><span class="p">{</span>@count<span class="p">}</span><span class="c">%</span>
		<span class="k">\ifnum\value</span><span class="p">{</span>@count<span class="p">}</span>=3
			<span class="k">\space</span><span class="c">%</span>
			<span class="k">\setcounter</span><span class="p">{</span>@count<span class="p">}{</span>0<span class="p">}</span><span class="c">%</span>
		<span class="k">\fi</span><span class="c">%</span>
	<span class="p">}</span><span class="c">%</span>
<span class="p">}</span><span class="c">%</span>
<span class="k">\makeatother</span><span class="c">%</span>
.
.
.
<span class="nt">\begin{document}</span>
.
.
.

</code></pre></div></div> <p><br/></p> <h4 id="3-including-the-table-in-the-document">3) Including the Table in the Document</h4> <p>In the scope of the <code class="language-plaintext highlighter-rouge">\csvreader[]{file-to-use.csv}</code> command, a template is defined. The command then itreates over every row of the provided file, pastes the rows data into the template and returns the resulting text.</p> <p>Inside the template, the columns can be referenced using their names (e.g. <code class="language-plaintext highlighter-rouge">\gene</code>).</p> <p>Add <code class="language-plaintext highlighter-rouge">\usepackage[l3]{csvsimple}</code> to your preamble.</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">\csvreader</span><span class="na">[head to column names]</span><span class="p">{</span>data/qpcr<span class="p">_</span>primer.csv<span class="p">}{}{</span>
	<span class="k">\\\hline</span> <span class="k">\textit</span><span class="p">{</span><span class="k">\gene</span><span class="p">}</span>  <span class="p">&amp;</span> fwd <span class="k">\newline</span> rev <span class="p">&amp;</span> <span class="p">{</span><span class="k">\ttfamily</span> <span class="k">\expandafter\formatDNA\expandafter</span><span class="p">{</span><span class="k">\seqfwd</span><span class="p">}</span> <span class="k">\newline</span> <span class="k">\expandafter\formatDNA\expandafter</span><span class="p">{</span><span class="k">\seqrev</span><span class="p">}}</span>
<span class="p">}</span>

</code></pre></div></div> <p>(<code class="language-plaintext highlighter-rouge">\expandafter</code> is necessary because of the order in which TeX evaluates expressions. You can read more on that <a href="https://www.overleaf.com/learn/latex/Articles/How_does_%5Cexpandafter_work%3A_From_basic_principles_to_exploring_TeX%27s_source_code">here</a>.)</p> <p>When the template within the scope of the command resembles a table row, it can simply be included in a tabular (e.g. longtable) to apply additional formatting and produce a nice table in the resulting document.</p> <p>This code …</p> <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nt">\begin{longtable}</span><span class="p">{</span>
		&gt;<span class="p">{</span><span class="k">\centering\let\newline\\\arraybackslash\hspace</span><span class="p">{</span>0pt<span class="p">}}</span>m<span class="p">{</span>2cm<span class="p">}</span>
		&gt;<span class="p">{</span><span class="k">\centering\let\newline\\\arraybackslash\hspace</span><span class="p">{</span>0pt<span class="p">}}</span>m<span class="p">{</span>3cm<span class="p">}</span>
		m<span class="p">{</span>9.7cm<span class="p">}</span> <span class="p">}</span>
	<span class="k">\caption</span><span class="p">{</span>List of primer sequences used for qPCR.<span class="p">}</span>
	<span class="k">\label</span><span class="p">{</span>table:qpcr-primer<span class="p">}</span><span class="k">\\</span>
	<span class="k">\hline</span>
	<span class="k">\textbf</span><span class="p">{</span>Gene<span class="p">}</span> <span class="p">&amp;</span> <span class="k">\textbf</span><span class="p">{</span>Direction<span class="p">}</span> <span class="p">&amp;</span> <span class="k">\textbf</span><span class="p">{</span>Sequence 5'<span class="k">\textrightarrow</span>3'<span class="p">}</span>
	<span class="k">\csvreader</span><span class="na">[head to column names]</span><span class="p">{</span>data/qpcr<span class="p">_</span>primer.csv<span class="p">}{}{</span>
		<span class="k">\\\hline</span> <span class="k">\textit</span><span class="p">{</span><span class="k">\gene</span><span class="p">}</span>  <span class="p">&amp;</span> fwd <span class="k">\newline</span> rev <span class="p">&amp;</span> <span class="p">{</span><span class="k">\ttfamily</span> <span class="k">\expandafter\formatDNA\expandafter</span><span class="p">{</span><span class="k">\seqfwd</span><span class="p">}</span> <span class="k">\newline</span> <span class="k">\expandafter\formatDNA\expandafter</span><span class="p">{</span><span class="k">\seqrev</span><span class="p">}}</span>
	<span class="p">}</span>
	<span class="k">\\\hline</span>
<span class="nt">\end{longtable}</span>

</code></pre></div></div> <p>… produces a table like the following.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/latex_primer_table-480.webp 480w,/assets/img/latex_primer_table-800.webp 800w,/assets/img/latex_primer_table-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/latex_primer_table.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="The resulting table" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>]]></content><author><name></name></author><category term="tutorials"/><category term="tools"/><category term="latex"/><summary type="html"><![CDATA[Example implementation from my bachelor's thesis.]]></summary></entry><entry><title type="html">How to use Cellpose with Cellprofiler (without plugin)</title><link href="https://qlnguyen1208.github.io/blog/2024/use_cellpose_with_cellprofiler/" rel="alternate" type="text/html" title="How to use Cellpose with Cellprofiler (without plugin)"/><published>2024-03-01T00:00:00+00:00</published><updated>2024-03-01T00:00:00+00:00</updated><id>https://qlnguyen1208.github.io/blog/2024/use_cellpose_with_cellprofiler</id><content type="html" xml:base="https://qlnguyen1208.github.io/blog/2024/use_cellpose_with_cellprofiler/"><![CDATA[<p><a href="https://www.cellpose.org/">Cellpose</a> is generalist segmentation algorithm that allows for reliable identification of cells in microscope images even under suboptimal conditions (e.g. bad focus, degenerated cells) and its usage in combination with <a href="https://cellprofiler.org/">Cellprofiler</a> enables highly automated analysis of cell/tissue morphology. A <a href="https://forum.image.sc/t/new-cellprofiler-4-plugin-runcellpose/56858">plugin</a> allows for direct integration of the two tools and is the most convenient way to build a pipeline, however for various reasons it can be useful to separate segmentation process and analysis.</p> <p><br/></p> <h4 id="0-install-cellpose--cellprofiler">0) Install Cellpose &amp; Cellprofiler</h4> <p>Before starting, make sure you have <a href="https://www.python.org/downloads/">python</a> installed. If you lack permission or don’t want to install software on the system you are working on <a href="https://winpython.github.io/">WinPython</a> offers an easy way to run python from a local folder without installation.</p> <p>Open a PowerShell prompt (when using WinPython run “WinPython Powershell Prompt.exe”) and run the commands below to install Cellpose and it’s optional graphical user interface.</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pip</span><span class="w"> </span><span class="nx">install</span><span class="w"> </span><span class="s2">"cellpose"</span><span class="w">
</span><span class="n">pip</span><span class="w"> </span><span class="nx">install</span><span class="w"> </span><span class="s2">"cellpose[gui]"</span><span class="w">
</span></code></pre></div></div> <p>To install Cellprofiler you can either download the <a href="https://cellprofiler.org/releases">installer</a> or run the command below in a PowerShell prompt.</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pip</span><span class="w"> </span><span class="nx">install</span><span class="w"> </span><span class="s2">"cellprofiler"</span><span class="w">
</span></code></pre></div></div> <blockquote> <h5 id="info">INFO</h5> <p class="block-tip">For this example, I used the, as of this writing, most recent versions of Cellpose 3 and Cellprofiler 4 but future updates might break the exact procedure.</p> </blockquote> <p><br/></p> <h4 id="1-segmentation-in-cellpose">1) Segmentation in Cellpose</h4> <p>To start Cellpose in gui mode run <code class="language-plaintext highlighter-rouge">cellpose</code> in a PowerShell prompt. Here you can load single pictures from you dataset and determine the optimal run parameters. You can use the “Calibrate” button after you loaded a picture to determine the average pixel size of your cells. For a more detailed explanation check out the <a href="https://cellpose.readthedocs.io/en/latest/">official documentation.</a></p> <p>Segmenting all of your pictures using the gui can be cumbersome if your dataset has n&gt;1, so the command below can process an entire folder full of pictures and safe the produced masks as png.</p> <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cellpose</span><span class="w"> </span><span class="se">`
</span><span class="nt">--dir</span><span class="w"> </span><span class="s2">"C:\Users\User\Documents\Cellpose\in"</span><span class="w"> </span><span class="se">`
</span><span class="nt">--savedir</span><span class="w"> </span><span class="s2">"C:\Users\User\Documents\Cellpose\out"</span><span class="w"> </span><span class="se">`
</span><span class="nt">--save_png</span><span class="w"> </span><span class="se">`
</span><span class="nt">--chan</span><span class="w"> </span><span class="nx">0</span><span class="w"> </span><span class="se">`
</span><span class="nt">--diameter</span><span class="w"> </span><span class="nx">90</span><span class="w"> </span><span class="se">`
</span><span class="nt">--pretrained_model</span><span class="w"> </span><span class="nx">cyto3</span><span class="w"> </span><span class="se">`
</span><span class="nt">--exclude_on_edges</span><span class="w">
</span></code></pre></div></div> <p>A short explanation of what the flags achieve, for more details check the <a href="https://cellpose.readthedocs.io/en/latest/cli.html">documentation:</a><br/> <code class="language-plaintext highlighter-rouge">--dir</code> Choose the folder where your input images are saved<br/> <code class="language-plaintext highlighter-rouge">--savedir</code> Choose the folder to which your masks are saved<br/> <code class="language-plaintext highlighter-rouge">--save_png</code> Saves the result of the segmentation (=mask) as png file<br/> <code class="language-plaintext highlighter-rouge">--chan 0</code> Uses the grey channel for segmentation<br/> <code class="language-plaintext highlighter-rouge">--diameter</code> Choose the average diameter of your cells in pixel (can be determined in the gui)<br/> <code class="language-plaintext highlighter-rouge">--pretrained_model cyto3</code> Selects the model to use for segmentation, tweak as necessary<br/> <code class="language-plaintext highlighter-rouge">--eclude_on_edges</code> Makes sure cells on the edge of the image aren’t segmented<br/> If you have a gpu I recommend you add <code class="language-plaintext highlighter-rouge">--use_gpu</code> to significantly speed up the segmentation.</p> <p><br/></p> <h4 id="2-analysis-in-cellprofiler">2) Analysis in Cellprofiler</h4> <p>The generated masks can be used in cellprofiler to detect the segmented cells as individual objects. To achieve this, assign your masks in “Images” and “NamesAndTypes” and use the “ConvertImageToObjects” module in your pipeline, select the cellpose masks as input, name your output objects and select “No” on “Convert to boolean image”</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/CellProfiler_ImageToObj-480.webp 480w,/assets/img/CellProfiler_ImageToObj-800.webp 800w,/assets/img/CellProfiler_ImageToObj-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/CellProfiler_ImageToObj.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="CellProfiler Screenshot" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>You can then use the objects in other modules such as “MeasureObjectSizeShape”.</p>]]></content><author><name></name></author><category term="tutorials"/><category term="research"/><category term="tools"/><category term="python"/><category term="cellprofiler"/><category term="cellpose"/><summary type="html"><![CDATA[A short tutorial on how cellpose segmentation can be used in cellprofiler pipelines without using the plugin.]]></summary></entry></feed>